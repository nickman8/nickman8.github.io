{"version":3,"sources":["ChatMessage/ChatMessage.js","ChatArea/ChatArea.js","ChatInput/ChatInput.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","marginLeft","marginTop","ChatMessage","name","message","classes","className","defaultProps","bgcolor","border","style","height","overflow","ChatArea","messages","Box","borderColor","map","item","key","id","width","button","margin","spacing","flex","settings","ChatInput","func","changeName","React","useState","open","setOpen","formName","setFormName","handleClose","value","setValue","onSubmit","event","preventDefault","TextField","label","onChange","target","Button","variant","color","type","endIcon","Icon","IconButton","onClick","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","fullWidth","DialogActions","App","setMessages","setName","Container","maxWidth","textAlign","concat","Date","now","element","document","querySelector","setTimeout","scrollTop","scrollHeight","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3b6fcc7f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { deepPurple } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        marginLeft: \"5px\",\r\n        marginTop: \"5px\"\r\n    },\r\n}));\r\n\r\nfunction ChatMessage({ name, message }) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <span>{name}: </span>\r\n            <span>&nbsp; {message} </span>\r\n        </div>\r\n    )\r\n}\r\nexport default ChatMessage\r\n","import React from \"react\";\r\nimport Box from '@material-ui/core/Box';\r\nimport ChatMessage from \"../ChatMessage/ChatMessage\"\r\n\r\nconst defaultProps = {\r\n    bgcolor: 'background.paper',\r\n    border: 1,\r\n    style: { height: '25rem' },\r\n    overflow: \"auto\"\r\n};\r\n\r\nfunction ChatArea({ messages }) { \r\n    \r\n    \r\n    return (\r\n        <div>\r\n            <Box borderColor=\"primary.main\" {...defaultProps}            >\r\n                {messages.map((item) => {\r\n                    return <ChatMessage key = {item.id} name={item.name} message={item.message} />\r\n                })}               \r\n        \r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\nexport default ChatArea;","import React, { useState } from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    flex: {\r\n        display: \"flex\"\r\n    },\r\n    settings: {\r\n        margin: theme.spacing(1),\r\n        width: \"50px\",\r\n\r\n    }\r\n\r\n}));\r\n\r\nfunction ChatInput({ func, name, changeName }) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [formName, setFormName] = useState(name)\r\n\r\n    const handleClickOpen = () => {\r\n        setFormName(name)\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleCloseSubmit = () => {\r\n        setOpen(false);\r\n        if(formName !==\"\"){\r\n            changeName(formName)\r\n        }\r\n        \r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n\r\n    };\r\n\r\n    const [value, setValue] = useState(\"\")\r\n\r\n    function sumbitHandler(event) {\r\n        event.preventDefault()\r\n        func(`${name}(You)`, value)\r\n        setValue(\"\")\r\n    }\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <form className={classes.flex} onSubmit={sumbitHandler} >\r\n            <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Your message\"\r\n                className={classes.root}\r\n                value={value}\r\n                onChange={event => setValue(event.target.value)}\r\n            />\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"sumbit\"\r\n                className={classes.button}\r\n                endIcon={<Icon>send</Icon>} >\r\n                Send\r\n      </Button>\r\n            <IconButton color=\"primary\" onClick={handleClickOpen}>\r\n                <SettingsIcon color=\"primary\" />\r\n            </IconButton>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Change Nickname</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Nickname\"\r\n                        type=\"nick\"\r\n                        fullWidth\r\n                        value={formName}\r\n                        onChange={event => setFormName(event.target.value)}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button onClick={handleCloseSubmit} color=\"primary\">\r\n                        Change nickname\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default ChatInput","import React from 'react';\nimport './App.css';\nimport ChatArea from './ChatArea/ChatArea';\nimport ChatInput from './ChatInput/ChatInput';\nimport Container from '@material-ui/core/Container';\n\n\nfunction App() {\n  const [messages,setMessages]=React.useState([\n  {id:1,name:\"Andrew\",message:\"hi\"},\n  {id:2,name:\"Den\",message:\"hello\"},\n  {id:3,name:\"Alex\",message:\"Nice to meet you\"}\n])\n\nconst [name,setName] = React.useState(\"Nameless\");\n\nfunction addMessage(name,message){\n  if(message !== \"\"){\n    setMessages (messages.concat({\n      name,\n      id:Date.now(),\n      message\n  }))\n  const element = document.querySelector(\".MuiBox-root\")  \n  setTimeout(()=>{\n    element.scrollTop = element.scrollHeight\n  },50)\n  }\n}\n\nfunction changeName (name) {\n  setName(name)\n}\n\n  return (\n    <Container maxWidth=\"sm\">\n    <h1 style={{textAlign:\"center\"}}>ChatApp</h1>\n    <ChatArea messages = {messages} />\n    <ChatInput func={addMessage} name = {name} changeName = {changeName} />\n  </Container>    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}